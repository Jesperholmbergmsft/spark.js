// DO NOT EDIT THIS FILE
import type { Operation } from './../../../common.ts';

export interface Endpoints {
  /**
   * Delete a conversationMember from a channel. This operation is allowed only for channels with a membershipType value of private or shared.
   */
  'DELETE /teams/{team-id}/channels/{channel-id}/members/{conversationMember-id}': Operation<
    '/teams/{team-id}/channels/{channel-id}/members/{conversationMember-id}',
    'delete'
  >;
  /**
   * Retrieve a list of conversationMembers from a channel. This method supports federation. Only a user who is a member of the shared channel can retrieve the channel member list.
   */
  'GET /teams/{team-id}/channels/{channel-id}/members': Operation<
    '/teams/{team-id}/channels/{channel-id}/members',
    'get'
  >;
  /**
   * Get a conversationMember from a channel.
   */
  'GET /teams/{team-id}/channels/{channel-id}/members/{conversationMember-id}': Operation<
    '/teams/{team-id}/channels/{channel-id}/members/{conversationMember-id}',
    'get'
  >;
  /**
   * Update the role of a conversationMember in a team or channel.
   */
  'PATCH /teams/{team-id}/channels/{channel-id}/members/{conversationMember-id}': Operation<
    '/teams/{team-id}/channels/{channel-id}/members/{conversationMember-id}',
    'patch'
  >;
  /**
   * Add a conversationMember to a channel. This operation is allowed only for channels with a membershipType value of private or shared.
   */
  'POST /teams/{team-id}/channels/{channel-id}/members': Operation<
    '/teams/{team-id}/channels/{channel-id}/members',
    'post'
  >;
}

// DO NOT EDIT THIS FILE
import type { Operation } from './../../../common.ts';

export interface Endpoints {
  /**
   */
  'DELETE /teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}': Operation<
    '/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}',
    'delete'
  >;
  /**
   * Retrieve the list of messages (without the replies) in a channel of a team.  To get the replies for a message, call the list message replies or the get message reply API.  This method supports federation. To list channel messages in application context, the request must be made from the tenant that the channel owner belongs to (represented by the tenantId property on the channel).
   */
  'GET /teams/{team-id}/channels/{channel-id}/messages': Operation<
    '/teams/{team-id}/channels/{channel-id}/messages',
    'get'
  >;
  /**
   * Retrieve a single message or a message reply in a channel or a chat.
   */
  'GET /teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}': Operation<
    '/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}',
    'get'
  >;
  /**
   * Update a chatMessage object. 
Except for the policyViolation property, all properties of a chatMessage can be updated in delegated permissions scenarios.
Only the policyViolation property of a chatMessage can be updated in application permissions scenarios. The update only works for chats where members are Microsoft Teams users. If one of the participants is using Skype, the operation fails. This method doesn&#x27;t support federation. Only the user in the tenant who sent the message can perform data loss prevention (DLP) updates on the specified chat message.
   */
  'PATCH /teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}': Operation<
    '/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}',
    'patch'
  >;
  /**
   * Send a new chatMessage in the specified channel.
   */
  'POST /teams/{team-id}/channels/{channel-id}/messages': Operation<
    '/teams/{team-id}/channels/{channel-id}/messages',
    'post'
  >;
}
